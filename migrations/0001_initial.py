# Generated by Django 2.0.4 on 2018-04-27 12:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('slug', models.SlugField(max_length=128, verbose_name='Slug')),
                ('title', models.CharField(blank=True, max_length=256, null=True, verbose_name='Title')),
                ('description', models.CharField(blank=True, max_length=2048, null=True, verbose_name='Description')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Text')),
                ('image', models.FileField(blank=True, null=True, upload_to='tmp', verbose_name='Image')),
                ('bg', models.FileField(blank=True, null=True, upload_to='tmp', verbose_name='Background')),
                ('sorting', models.PositiveIntegerField(default=500, verbose_name='Sorting')),
                ('group', models.CharField(default='content', max_length=64, verbose_name='Group')),
                ('template', models.CharField(blank=True, max_length=124, null=True, verbose_name='Template')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Block',
                'verbose_name_plural': 'Blocks',
                'ordering': ['sorting'],
            },
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('title', models.CharField(blank=True, max_length=256, null=True, verbose_name='Title')),
                ('description', models.CharField(blank=True, max_length=2048, null=True, verbose_name='Description')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Text')),
                ('image', models.FileField(blank=True, null=True, upload_to='tmp', verbose_name='Image')),
                ('sorting', models.PositiveIntegerField(default=500, verbose_name='Sorting')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='cms.Block', verbose_name='Block')),
            ],
            options={
                'verbose_name': 'Element',
                'verbose_name_plural': 'Elements',
                'ordering': ['sorting'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('title', models.CharField(blank=True, max_length=256, null=True, verbose_name='Title')),
                ('header', models.CharField(blank=True, max_length=256, null=True, verbose_name='Header')),
                ('keywords', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Keywords')),
                ('description', models.CharField(blank=True, max_length=2048, null=True, verbose_name='Description')),
                ('head_code', models.TextField(blank=True, null=True, verbose_name='Head code')),
                ('footer_code', models.TextField(blank=True, null=True, verbose_name='Footer code')),
                ('image', models.FileField(blank=True, upload_to='tmp', verbose_name='Image')),
                ('intro', models.TextField(blank=True, null=True, verbose_name='Intro')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Text')),
                ('level', models.IntegerField(default=0, editable=False, verbose_name='Level')),
                ('sorting', models.PositiveIntegerField(default=500, verbose_name='Sorting')),
                ('tree_sorting', models.IntegerField(default=500, editable=False, verbose_name='Tree sorting')),
                ('slug', models.CharField(help_text='A slug is the part of a URL which identifies a page using human-readable keywords', max_length=128, unique=True, verbose_name='Slug')),
                ('url', models.CharField(editable=False, max_length=1024, verbose_name='URL')),
                ('template', models.CharField(blank=True, max_length=32, null=True, verbose_name='Template')),
                ('per_page', models.IntegerField(default=10, help_text='The maximum number of items to include on a page', verbose_name='Items per page')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childs', to='cms.Page', verbose_name='Parent')),
                ('sites', models.ManyToManyField(blank=True, related_name='new_pages', to='sites.Site', verbose_name='Sites')),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
                'ordering': ['tree_sorting'],
            },
        ),
        migrations.CreateModel(
            name='Redirect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_protocol', models.CharField(choices=[('http://', 'HTTP'), ('https://', 'HTTPS')], max_length=32, verbose_name='From Protocol')),
                ('from_domain', models.CharField(blank=True, max_length=256, null=True, verbose_name='From Domain')),
                ('from_url', models.CharField(max_length=2048, verbose_name='From URL')),
                ('to_protocol', models.CharField(choices=[('http://', 'HTTP'), ('https://', 'HTTPS')], max_length=32, verbose_name='To Protocol')),
                ('to_domain', models.CharField(max_length=256, verbose_name='To Domain')),
                ('to_url', models.CharField(max_length=2048, verbose_name='To URL')),
                ('regex', models.BooleanField(default=False, verbose_name='RegEx')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Redirect',
                'verbose_name_plural': 'Redirects',
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=32, verbose_name='Language')),
                ('robots_txt', models.TextField(blank=True, verbose_name='robots.txt')),
                ('sitemap_xml', models.TextField(blank=True, verbose_name='sitemap.xml')),
                ('head_code', models.TextField(blank=True, null=True, verbose_name='Head code')),
                ('footer_code', models.TextField(blank=True, null=True, verbose_name='Footer code')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='sites.Site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Settings',
                'verbose_name_plural': 'Settings',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('slug', models.SlugField(help_text='A slug is the part of a URL which identifies a page using human-readable keywords', max_length=128, unique=True, verbose_name='Slug')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('key', models.CharField(max_length=128, verbose_name='Key')),
                ('var_type', models.CharField(choices=[('text', 'Text'), ('string', 'String'), ('int', 'Integer'), ('double', 'Double'), ('file', 'File')], max_length=32, verbose_name='Type')),
                ('value', models.FileField(blank=True, max_length=5000, null=True, upload_to='', verbose_name='Value')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variables', to='sites.Site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Variable',
                'verbose_name_plural': 'Variables',
            },
        ),
        migrations.AddField(
            model_name='page',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='pages', to='cms.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='block',
            name='pages',
            field=models.ManyToManyField(blank=True, related_name='blocks', to='cms.Page', verbose_name='Pages'),
        ),
    ]
